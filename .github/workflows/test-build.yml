name: Build Custom ISO Image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-20.04
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: run script
        run: |
          chmod +x script.sh
          ./script.sh

      - name: Create Tag and Push to GitHub
        run: |
                  tagname=test
                  git config user.name ${{ github.actor }}
                  git config user.email github-actions@github.com
                  git tag -a $tagname -m $tagname
                  git push --tags
                  ls -al /*.iso
                  sudo tar -czvf /test.iso.tar /test.iso
                  cd /
  
      - name: Create release
        uses: "actions/github-script@v6"
        env:
                VERSION: test
                RELEASE_TAG: test
        with:
                  github-token: "${{ github.token }}"
                  script: |
                    try {
                      const response = await github.rest.repos.createRelease({
                        draft: false,
                        generate_release_notes: true,
                        name: process.env.RELEASE_TAG,
                        owner: context.repo.owner,
                        prerelease: false,
                        repo: context.repo.repo,
                        tag_name: process.env.RELEASE_TAG,
                      });
                      core.exportVariable('RELEASE_ID', response.data.id);
                      core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
                    } catch (error) {
                      core.setFailed(error.message);
                    }
      
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        env:
              VERSION: test
        with:
                repo_token: ${{ github.token }}
                file: test.iso.tar
                file_glob: true
                tag: test
                overwrite: true
                body: "Cloud Platform ISO Image Version test"
          